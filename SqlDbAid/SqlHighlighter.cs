using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text.RegularExpressions;
using System.Windows.Forms;

namespace SqlDbAid
{
    class SqlHighlighter
    {
        private Dictionary<string, Color> mKW;

        private static readonly Color COL_OPERATOR = Color.Gray;
        private static readonly Color COL_TYPE = Color.BlueViolet;
        private static readonly Color COL_KEYWORD = Color.Blue;
        private static readonly Color COL_VARFUN = Color.Magenta;
        private static readonly Color COL_COMMENT = Color.Green;
        private static readonly Color COL_STRING = Color.Red;
        private static readonly Color COL_NORMAL = Color.Black;

        public SqlHighlighter()
        {
            mKW = new Dictionary<string, Color>
            {
                // Variables / Functions
                { "@@CONNECTIONS", COL_VARFUN },
                { "@@CPU_BUSY", COL_VARFUN },
                { "@@CURSOR_ROWS", COL_VARFUN },
                { "@@DATEFIRST", COL_VARFUN },
                { "@@DBTS", COL_VARFUN },
                { "@@ERROR", COL_VARFUN },
                { "@@FETCH_STATUS", COL_VARFUN },
                { "@@IDENTITY", COL_VARFUN },
                { "@@IDLE", COL_VARFUN },
                { "@@IO_BUSY", COL_VARFUN },
                { "@@LANGID", COL_VARFUN },
                { "@@LANGUAGE", COL_VARFUN },
                { "@@LOCK_TIMEOUT", COL_VARFUN },
                { "@@MAX_CONNECTIONS", COL_VARFUN },
                { "@@MAX_PRECISION", COL_VARFUN },
                { "@@NESTLEVEL", COL_VARFUN },
                { "@@OPTIONS", COL_VARFUN },
                { "@@PACK_RECEIVED", COL_VARFUN },
                { "@@PACK_SENT", COL_VARFUN },
                { "@@PACKET_ERRORS", COL_VARFUN },
                { "@@PROCID", COL_VARFUN },
                { "@@REMSERVER", COL_VARFUN },
                { "@@ROWCOUNT", COL_VARFUN },
                { "@@SERVERNAME", COL_VARFUN },
                { "@@SERVICENAME", COL_VARFUN },
                { "@@SPID", COL_VARFUN },
                { "@@TEXTSIZE", COL_VARFUN },
                { "@@TIMETICKS", COL_VARFUN },
                { "@@TOTAL_ERRORS", COL_VARFUN },
                { "@@TOTAL_READ", COL_VARFUN },
                { "@@TOTAL_WRITE", COL_VARFUN },
                { "@@TRANCOUNT", COL_VARFUN },
                { "@@VERSION", COL_VARFUN },
                { "ABS", COL_VARFUN },
                { "ACOS", COL_VARFUN },
                { "APP_NAME", COL_VARFUN },
                { "APPLOCK_MODE", COL_VARFUN },
                { "APPLOCK_TEST", COL_VARFUN },
                { "APPROX_COUNT_DISTINCT", COL_VARFUN },
                { "ASCII", COL_VARFUN },
                { "ASIN", COL_VARFUN },
                { "ASSEMBLYPROPERTY", COL_VARFUN },
                { "ASYMKEY_ID", COL_VARFUN },
                { "ASYMKEYPROPERTY", COL_VARFUN },
                { "ATAN", COL_VARFUN },
                { "ATN2", COL_VARFUN },
                { "AVG", COL_VARFUN },
                { "BINARY_CHECKSUM", COL_VARFUN },
                { "CAST", COL_VARFUN },
                { "CEILING", COL_VARFUN },
                { "CERT_ID", COL_VARFUN },
                { "CERTENCODED", COL_VARFUN },
                { "CERTPRIVATEKEY", COL_VARFUN },
                { "CERTPROPERTY", COL_VARFUN },
                { "CHARINDEX", COL_VARFUN },
                { "CHECKSUM", COL_VARFUN },
                { "CHECKSUM_AGG", COL_VARFUN },
                { "CHOOSE", COL_VARFUN },
                { "COALESCE", COL_VARFUN },
                { "COL_LENGTH", COL_VARFUN },
                { "COL_NAME", COL_VARFUN },
                { "COLLATIONPROPERTY", COL_VARFUN },
                { "COLUMNPROPERTY", COL_VARFUN },
                { "COLUMNS_UPDATED", COL_VARFUN },
                { "COMPRESS", COL_VARFUN },
                { "COMPRESSION_ESTIMATE", COL_VARFUN },
                { "CONCAT", COL_VARFUN },
                { "CONCAT_WS", COL_VARFUN },
                { "CONNECTIONPROPERTY", COL_VARFUN },
                { "CONTAINS", COL_VARFUN },
                { "CONVERT", COL_VARFUN },
                { "COS", COL_VARFUN },
                { "COT", COL_VARFUN },
                { "COUNT", COL_VARFUN },
                { "COUNT_BIG", COL_VARFUN },
                { "CUME_DIST", COL_VARFUN },
                { "CURRENT_DATE", COL_VARFUN },
                { "CURRENT_REQUEST_ID", COL_VARFUN },
                { "CURRENT_TIME", COL_VARFUN },
                { "CURRENT_TIMESTAMP", COL_VARFUN },
                { "CURRENT_TIMEZONE", COL_VARFUN },
                { "CURRENT_TIMEZONE_ID", COL_VARFUN },
                { "CURRENT_TRANSACTION_ID", COL_VARFUN },
                { "CURRENT_USER", COL_VARFUN },
                { "CURSOR_STATUS", COL_VARFUN },
                { "DATABASE_PRINCIPAL_ID", COL_VARFUN },
                { "DATABASEPROPERTY", COL_VARFUN },
                { "DATABASEPROPERTYEX", COL_VARFUN },
                { "DATALENGTH", COL_VARFUN },
                { "DATE_BUCKET", COL_VARFUN },
                { "DATEADD", COL_VARFUN },
                { "DATEDIFF", COL_VARFUN },
                { "DATEFROMPARTS", COL_VARFUN },
                { "DATENAME", COL_VARFUN },
                { "DATEPART", COL_VARFUN },
                { "DATETIME2FROMPARTS", COL_VARFUN },
                { "DATETIMEFROMPARTS", COL_VARFUN },
                { "DATETIMEOFFSETFROMPARTS", COL_VARFUN },
                { "DATETRUNC", COL_VARFUN },
                { "DAY", COL_VARFUN },
                { "DB_ID", COL_VARFUN },
                { "DB_NAME", COL_VARFUN },
                { "DECOMPRESS", COL_VARFUN },
                { "DECRYPTBYCERT", COL_VARFUN },
                { "DECRYPTBYKEY", COL_VARFUN },
                { "DECRYPTBYKEYAUTOCERT", COL_VARFUN },
                { "DECRYPTBYPASSPHRASE", COL_VARFUN },
                { "DEGREES", COL_VARFUN },
                { "DENSE_RANK", COL_VARFUN },
                { "DIFFERENCE", COL_VARFUN },
                { "ENCRYPTBYCERT", COL_VARFUN },
                { "ENCRYPTBYKEY", COL_VARFUN },
                { "ENCRYPTBYPASSPHRASE", COL_VARFUN },
                { "EOMONTH", COL_VARFUN },
                { "ERROR_LINE", COL_VARFUN },
                { "ERROR_MESSAGE", COL_VARFUN },
                { "ERROR_NUMBER", COL_VARFUN },
                { "ERROR_PROCEDURE", COL_VARFUN },
                { "ERROR_SEVERITY", COL_VARFUN },
                { "ERROR_STATE", COL_VARFUN },
                { "EVENTDATA", COL_VARFUN },
                { "EXIST", COL_VARFUN },
                { "EXP", COL_VARFUN },
                { "FILE_ID", COL_VARFUN },
                { "FILE_IDEX", COL_VARFUN },
                { "FILE_NAME", COL_VARFUN },
                { "FILEGROUP_ID", COL_VARFUN },
                { "FILEGROUP_NAME", COL_VARFUN },
                { "FILEGROUPPROPERTY", COL_VARFUN },
                { "FILEPROPERTY", COL_VARFUN },
                { "FILETABLEROOTPATH", COL_VARFUN },
                { "FIRST_VALUE", COL_VARFUN },
                { "FLOOR", COL_VARFUN },
                { "FORMAT", COL_VARFUN },
                { "FORMATMESSAGE", COL_VARFUN },
                { "FULLTEXTCATALOGPROPERTY", COL_VARFUN },
                { "FULLTEXTSERVICEPROPERTY", COL_VARFUN },
                { "GENERATE_SERIES", COL_VARFUN },
                { "GET_FILESTREAM_TRANSACTION_CONTEXT", COL_VARFUN },
                { "GET_TRANSMISSION_STATUS", COL_VARFUN },
                { "GETANSINULL", COL_VARFUN },
                { "GETDATE", COL_VARFUN },
                { "GETUTCDATE", COL_VARFUN },
                { "GRAPH_ID_FROM_EDGE_ID", COL_VARFUN },
                { "GRAPH_ID_FROM_NODE_ID", COL_VARFUN },
                { "GREATEST", COL_VARFUN },
                { "GROUPING", COL_VARFUN },
                { "GROUPING_ID", COL_VARFUN },
                { "HAS_DBACCESS", COL_VARFUN },
                { "HAS_PERMS_BY_NAME", COL_VARFUN },
                { "HASHBYTES", COL_VARFUN },
                { "HOST_ID", COL_VARFUN },
                { "HOST_NAME", COL_VARFUN },
                { "IDENT_CURRENT", COL_VARFUN },
                { "IDENT_INCR", COL_VARFUN },
                { "IDENT_SEED", COL_VARFUN },
                { "IIF", COL_VARFUN },
                { "INDEX_COL", COL_VARFUN },
                { "INDEXKEY_PROPERTY", COL_VARFUN },
                { "INDEXPROPERTY", COL_VARFUN },
                { "IS_MEMBER", COL_VARFUN },
                { "IS_OBJECTSIGNED", COL_VARFUN },
                { "IS_ROLEMEMBER", COL_VARFUN },
                { "IS_SRVROLEMEMBER", COL_VARFUN },
                { "ISDATE", COL_VARFUN },
                { "ISJSON", COL_VARFUN },
                { "ISNULL", COL_VARFUN },
                { "ISNUMERIC", COL_VARFUN },
                { "JSON_ARRAY", COL_VARFUN },
                { "JSON_MODIFY", COL_VARFUN },
                { "JSON_OBJECT", COL_VARFUN },
                { "JSON_PATH_EXISTS", COL_VARFUN },
                { "JSON_QUERY", COL_VARFUN },
                { "JSON_VALUE", COL_VARFUN },
                { "KEY_GUID", COL_VARFUN },
                { "KEY_ID", COL_VARFUN },
                { "LAG", COL_VARFUN },
                { "LAST_VALUE", COL_VARFUN },
                { "LEAD", COL_VARFUN },
                { "LEAST", COL_VARFUN },
                { "LEN", COL_VARFUN },
                { "LOG", COL_VARFUN },
                { "LOG10", COL_VARFUN },
                { "LOGINPROPERTY", COL_VARFUN },
                { "LOWER", COL_VARFUN },
                { "LTRIM", COL_VARFUN },
                { "MAX", COL_VARFUN },
                { "MIN", COL_VARFUN },
                { "MIN_ACTIVE_ROWVERSION", COL_VARFUN },
                { "MODIFY", COL_VARFUN },
                { "MONTH", COL_VARFUN },
                { "NEWID", COL_VARFUN },
                { "NEWSEQUENTIALID", COL_VARFUN },
                { "NODE_ID_FROM_PARTS", COL_VARFUN },
                { "NODES", COL_VARFUN },
                { "NTILE", COL_VARFUN },
                { "NULLIF", COL_VARFUN },
                { "OBJECT_DEFINITION", COL_VARFUN },
                { "OBJECT_ID", COL_VARFUN },
                { "OBJECT_NAME", COL_VARFUN },
                { "OBJECT_SCHEMA_NAME", COL_VARFUN },
                { "OBJECT_STATE", COL_VARFUN },
                { "OBJECTPROPERTY", COL_VARFUN },
                { "OBJECTPROPERTYEX", COL_VARFUN },
                { "OPENJSON", COL_VARFUN },
                { "OPENXML", COL_VARFUN },
                { "ORIGINAL_DB_NAME", COL_VARFUN },
                { "ORIGINAL_LOGIN", COL_VARFUN },
                { "PARSE", COL_VARFUN },
                { "PARSENAME", COL_VARFUN },
                { "PATHNAME", COL_VARFUN },
                { "PATINDEX", COL_VARFUN },
                { "PERCENT_RANK", COL_VARFUN },
                { "PERCENTILE_CONT", COL_VARFUN },
                { "PERCENTILE_DISC", COL_VARFUN },
                { "PERMISSIONS", COL_VARFUN },
                { "PI", COL_VARFUN },
                { "POWER", COL_VARFUN },
                { "PUBLISHINGSERVERNAME", COL_VARFUN },
                { "PWDCOMPARE", COL_VARFUN },
                { "PWDENCRYPT", COL_VARFUN },
                { "QUERY", COL_VARFUN },
                { "QUOTENAME", COL_VARFUN },
                { "RADIANS", COL_VARFUN },
                { "RAND", COL_VARFUN },
                { "RANK", COL_VARFUN },
                { "REPLACE", COL_VARFUN },
                { "REPLICATE", COL_VARFUN },
                { "REVERSE", COL_VARFUN },
                { "ROUND", COL_VARFUN },
                { "ROW_NUMBER", COL_VARFUN },
                { "ROWCOUNT", COL_VARFUN },
                { "ROWCOUNT_BIG", COL_VARFUN },
                { "RTRIM", COL_VARFUN },
                { "SCHEMA_ID", COL_VARFUN },
                { "SCHEMA_NAME", COL_VARFUN },
                { "SCOPE_IDENTITY", COL_VARFUN },
                { "SERVERPROPERTY", COL_VARFUN },
                { "SESSION_CONTEXT", COL_VARFUN },
                { "SESSION_USER", COL_VARFUN },
                { "SESSIONPROPERTY", COL_VARFUN },
                { "SIGN", COL_VARFUN },
                { "SIGNBYASYMKEY", COL_VARFUN },
                { "SIGNBYCERT", COL_VARFUN },
                { "SIN", COL_VARFUN },
                { "SMALLDATETIMEFROMPARTS", COL_VARFUN },
                { "SOUNDEX", COL_VARFUN },
                { "SPACE", COL_VARFUN },
                { "SQL_VARIANT_PROPERTY", COL_VARFUN },
                { "SQRT", COL_VARFUN },
                { "SQUARE", COL_VARFUN },
                { "STATS_DATE", COL_VARFUN },
                { "STDEV", COL_VARFUN },
                { "STDEVP", COL_VARFUN },
                { "STR", COL_VARFUN },
                { "STRING_AGG", COL_VARFUN },
                { "STRING_ESCAPE", COL_VARFUN },
                { "STRING_SPLIT", COL_VARFUN },
                { "STUFF", COL_VARFUN },
                { "SUBSTRING", COL_VARFUN },
                { "SUM", COL_VARFUN },
                { "SUSER_ID", COL_VARFUN },
                { "SUSER_NAME", COL_VARFUN },
                { "SUSER_SID", COL_VARFUN },
                { "SUSER_SNAME", COL_VARFUN },
                { "SWITCHOFFSET", COL_VARFUN },
                { "SYSDATETIME", COL_VARFUN },
                { "SYSDATETIMEOFFSET", COL_VARFUN },
                { "SYSTEM_USER", COL_VARFUN },
                { "SYSUTCDATETIME", COL_VARFUN },
                { "TAN", COL_VARFUN },
                { "TERTIARY_WEIGHTS", COL_VARFUN },
                { "TEXTPTR", COL_VARFUN },
                { "TEXTVALID", COL_VARFUN },
                { "TIMEFROMPARTS", COL_VARFUN },
                { "TODATETIMEOFFSET", COL_VARFUN },
                { "TRANSACTION_STATE", COL_VARFUN },
                { "TRANSLATE", COL_VARFUN },
                { "TRIGGER_EVENTDATA", COL_VARFUN },
                { "TRIGGER_NESTLEVEL", COL_VARFUN },
                { "TRIM", COL_VARFUN },
                { "TRY_CAST", COL_VARFUN },
                { "TRY_CONVERT", COL_VARFUN },
                { "TRY_PARSE", COL_VARFUN },
                { "TSEQUAL", COL_VARFUN },
                { "TYPE_ID", COL_VARFUN },
                { "TYPE_NAME", COL_VARFUN },
                { "TYPEPROPERTY", COL_VARFUN },
                { "UNICODE", COL_VARFUN },
                { "UPPER", COL_VARFUN },
                { "USER", COL_VARFUN },
                { "USER_ID", COL_VARFUN },
                { "USER_NAME", COL_VARFUN },
                { "VALUE", COL_VARFUN },
                { "VAR", COL_VARFUN },
                { "VARP", COL_VARFUN },
                { "VERIFYSIGNEDBYCERT", COL_VARFUN },
                { "XACT_STATE", COL_VARFUN },
                { "XML_SCHEMA_NAMESPACE", COL_VARFUN },
                { "YEAR", COL_VARFUN },
                // Keywords
                { "ADD", COL_KEYWORD },
                { "AFTER", COL_KEYWORD },
                { "ALTER", COL_KEYWORD },
                { "ANSI_DEFAULTS", COL_KEYWORD },
                { "ANSI_NULL_DFLT_OFF", COL_KEYWORD },
                { "ANSI_NULL_DFLT_ON", COL_KEYWORD },
                { "ANSI_NULLS", COL_KEYWORD },
                { "ANSI_PADDING", COL_KEYWORD },
                { "ANSI_WARNINGS", COL_KEYWORD },
                { "ARITHABORT", COL_KEYWORD },
                { "ARITHIGNORE", COL_KEYWORD },
                { "AS", COL_KEYWORD },
                { "ASC", COL_KEYWORD },
                { "ASSEMBLY", COL_KEYWORD },
                { "AT", COL_KEYWORD },
                { "AUTHORIZATION", COL_KEYWORD },
                { "AVAILABILITY", COL_KEYWORD },
                { "BACKUP", COL_KEYWORD },
                { "BEGIN", COL_KEYWORD },
                { "BREAK", COL_KEYWORD },
                { "BROWSE", COL_KEYWORD },
                { "BULK", COL_KEYWORD },
                { "BY", COL_KEYWORD },
                { "CALLER", COL_KEYWORD },
                { "CASCADE", COL_KEYWORD },
                { "CASE", COL_KEYWORD },
                { "CATCH", COL_KEYWORD },
                { "CERTIFICATE", COL_KEYWORD },
                { "CHECK", COL_KEYWORD },
                { "CHECKCONSTRAINTS", COL_KEYWORD },
                { "CHECKPOINT", COL_KEYWORD },
                { "CLASSIFIER", COL_KEYWORD },
                { "CLOSE", COL_KEYWORD },
                { "CLUSTERED", COL_KEYWORD },
                { "COLLATE", COL_KEYWORD },
                { "COLUMN", COL_KEYWORD },
                { "COLUMNSTORE", COL_KEYWORD },
                { "COMMIT", COL_KEYWORD },
                { "COMMITTED", COL_KEYWORD },
                { "COMPUTE", COL_KEYWORD },
                { "CONCAT_NULL_YIELDS_NULL", COL_KEYWORD },
                { "CONSTRAINT", COL_KEYWORD },
                { "CONTAINSTABLE", COL_KEYWORD },
                { "CONTEXT_INFO", COL_KEYWORD },
                { "CONTINUE", COL_KEYWORD },
                { "CONTRACT", COL_KEYWORD },
                { "CONVERSATION", COL_KEYWORD },
                { "CREATE", COL_KEYWORD },
                { "CREDENTIAL", COL_KEYWORD },
                { "CURRENT", COL_KEYWORD },
                { "CURSOR", COL_KEYWORD },
                { "CURSOR_CLOSE_ON_COMMIT", COL_KEYWORD },
                { "DATABASE", COL_KEYWORD },
                { "DATABASE_SCOPED_CREDENTIAL", COL_KEYWORD },
                { "DATEFIRST", COL_KEYWORD },
                { "DATEFORMAT", COL_KEYWORD },
                { "DBCC", COL_KEYWORD },
                { "DEADLOCK_PRIORITY", COL_KEYWORD },
                { "DEALLOCATE", COL_KEYWORD },
                { "DECLARE", COL_KEYWORD },
                { "DEFAULT", COL_KEYWORD },
                { "DELAY", COL_KEYWORD },
                { "DELETE", COL_KEYWORD },
                { "DENY", COL_KEYWORD },
                { "DESC", COL_KEYWORD },
                { "DETERMINISTIC", COL_KEYWORD },
                { "DISABLE", COL_KEYWORD },
                { "DISABLE_DEF_CNST_CHK", COL_KEYWORD },
                { "DISK", COL_KEYWORD },
                { "DISTINCT", COL_KEYWORD },
                { "DISTRIBUTED", COL_KEYWORD },
                { "DISTRIBUTION", COL_KEYWORD },
                { "DOUBLE", COL_KEYWORD },
                { "DROP", COL_KEYWORD },
                { "DUMP", COL_KEYWORD },
                { "ELSE", COL_KEYWORD },
                { "ENABLE", COL_KEYWORD },
                { "ENCRYPTION", COL_KEYWORD },
                { "END", COL_KEYWORD },
                { "ENDPOINT", COL_KEYWORD },
                { "ERRLVL", COL_KEYWORD },
                { "ESCAPE", COL_KEYWORD },
                { "EVENT", COL_KEYWORD },
                { "EXCEPT", COL_KEYWORD },
                { "EXEC", COL_KEYWORD },
                { "EXECUTE", COL_KEYWORD },
                { "EXIT", COL_KEYWORD },
                { "EXPAND", COL_KEYWORD },
                { "EXTERNAL", COL_KEYWORD },
                { "FAILOVER", COL_KEYWORD },
                { "FAST", COL_KEYWORD },
                { "FASTFIRSTROW", COL_KEYWORD },
                { "FEDERATION", COL_KEYWORD },
                { "FETCH", COL_KEYWORD },
                { "FILE", COL_KEYWORD },
                { "FILEGROUP", COL_KEYWORD },
                { "FILESTREAM", COL_KEYWORD },
                { "FILLFACTOR", COL_KEYWORD },
                { "FIPS_FLAGGER", COL_KEYWORD },
                { "FMTONLY", COL_KEYWORD },
                { "FOR", COL_KEYWORD },
                { "FORCE", COL_KEYWORD },
                { "FORCED", COL_KEYWORD },
                { "FORCEPLAN", COL_KEYWORD },
                { "FOREIGN", COL_KEYWORD },
                { "FREETEXT", COL_KEYWORD },
                { "FREETEXTTABLE", COL_KEYWORD },
                { "FROM", COL_KEYWORD },
                { "FULL", COL_KEYWORD },
                { "FULLTEXT", COL_KEYWORD },
                { "FUNCTION", COL_KEYWORD },
                { "GET", COL_KEYWORD },
                { "GO", COL_KEYWORD },
                { "GOTO", COL_KEYWORD },
                { "GRANT", COL_KEYWORD },
                { "GROUP", COL_KEYWORD },
                { "HASH", COL_KEYWORD },
                { "HAVING", COL_KEYWORD },
                { "HEAP", COL_KEYWORD },
                { "HIDDEN", COL_KEYWORD },
                { "HOLDLOCK", COL_KEYWORD },
                { "IDENTITY", COL_KEYWORD },
                { "IDENTITY_INSERT", COL_KEYWORD },
                { "IDENTITYCOL", COL_KEYWORD },
                { "IF", COL_KEYWORD },
                { "IGNORE_CONSTRAINTS", COL_KEYWORD },
                { "IGNORE_DUP_KEY", COL_KEYWORD },
                { "IGNORE_TRIGGERS", COL_KEYWORD },
                { "IMPLICIT_TRANSACTIONS", COL_KEYWORD },
                { "INCLUDE", COL_KEYWORD },
                { "INDEX", COL_KEYWORD },
                { "INSERT", COL_KEYWORD },
                { "INSTEAD", COL_KEYWORD },
                { "INTERSECT", COL_KEYWORD },
                { "INTO", COL_KEYWORD },
                { "IO", COL_KEYWORD },
                { "ISOLATION", COL_KEYWORD },
                { "JSON", COL_KEYWORD },
                { "KEEP", COL_KEYWORD },
                { "KEEPDEFAULTS", COL_KEYWORD },
                { "KEEPFIXED", COL_KEYWORD },
                { "KEEPIDENTITY", COL_KEYWORD },
                { "KEY", COL_KEYWORD },
                { "KILL", COL_KEYWORD },
                { "LANGUAGE", COL_KEYWORD },
                { "LEDGER", COL_KEYWORD },
                { "LEVEL", COL_KEYWORD },
                { "LINENO", COL_KEYWORD },
                { "LOAD", COL_KEYWORD },
                { "LOCK_TIMEOUT", COL_KEYWORD },
                { "LOGIN", COL_KEYWORD },
                { "LOOP", COL_KEYWORD },
                { "MASK", COL_KEYWORD },
                { "MASKED", COL_KEYWORD },
                { "MASTER", COL_KEYWORD },
                { "MAXDOP", COL_KEYWORD },
                { "MAXRECURSION", COL_KEYWORD },
                { "MERGE", COL_KEYWORD },
                { "MESSAGE", COL_KEYWORD },
                { "MOVE", COL_KEYWORD },
                { "NATIONAL", COL_KEYWORD },
                { "NEXT", COL_KEYWORD },
                { "NOCHECK", COL_KEYWORD },
                { "NOCOUNT", COL_KEYWORD },
                { "NOEXEC", COL_KEYWORD },
                { "NOEXPAND", COL_KEYWORD },
                { "NOINIT", COL_KEYWORD },
                { "NOLOCK", COL_KEYWORD },
                { "NONCLUSTERED", COL_KEYWORD },
                { "NONVALIDATING", COL_KEYWORD },
                { "NORECOVERY", COL_KEYWORD },
                { "NOTIFICATION", COL_KEYWORD },
                { "NOWAIT", COL_KEYWORD },
                { "NUMERIC_ROUNDABORT", COL_KEYWORD },
                { "OF", COL_KEYWORD },
                { "OFF", COL_KEYWORD },
                { "OFFLINE", COL_KEYWORD },
                { "OFFSET", COL_KEYWORD },
                { "OFFSETS", COL_KEYWORD },
                { "ON", COL_KEYWORD },
                { "ONLINE", COL_KEYWORD },
                { "OPEN", COL_KEYWORD },
                { "OPENDATASOURCE", COL_KEYWORD },
                { "OPENQUERY", COL_KEYWORD },
                { "OPENROWSET", COL_KEYWORD },
                { "OPTION", COL_KEYWORD },
                { "ORDER", COL_KEYWORD },
                { "OUT", COL_KEYWORD },
                { "OUTPUT", COL_KEYWORD },
                { "OVER", COL_KEYWORD },
                { "OWNER", COL_KEYWORD },
                { "PAD_INDEX", COL_KEYWORD },
                { "PAGLOCK", COL_KEYWORD },
                { "PARAMETERIZATION", COL_KEYWORD },
                { "PARSEONLY", COL_KEYWORD },
                { "PARTITION", COL_KEYWORD },
                { "PASSWORD", COL_KEYWORD },
                { "PERCENT", COL_KEYWORD },
                { "PERIOD", COL_KEYWORD },
                { "PERSISTED", COL_KEYWORD },
                { "PLAN", COL_KEYWORD },
                { "POLICY", COL_KEYWORD },
                { "POOL", COL_KEYWORD },
                { "PRECISION", COL_KEYWORD },
                { "PREDICATE", COL_KEYWORD },
                { "PRIMARY", COL_KEYWORD },
                { "PRINT", COL_KEYWORD },
                { "PRIORITY", COL_KEYWORD },
                { "PROC", COL_KEYWORD },
                { "PROCEDURE", COL_KEYWORD },
                { "PROFILE", COL_KEYWORD },
                { "PUBLIC", COL_KEYWORD },
                { "QUERY_GOVERNOR_COST_LIMIT", COL_KEYWORD },
                { "QUEUE", COL_KEYWORD },
                { "QUOTED_IDENTIFIER", COL_KEYWORD },
                { "RAISERROR", COL_KEYWORD },
                { "RANGE", COL_KEYWORD },
                { "READ", COL_KEYWORD },
                { "READCOMMITTED", COL_KEYWORD },
                { "READCOMMITTEDLOCK", COL_KEYWORD },
                { "READPAST", COL_KEYWORD },
                { "READTEXT", COL_KEYWORD },
                { "READUNCOMMITTED", COL_KEYWORD },
                { "REBUILD", COL_KEYWORD },
                { "RECEIVE", COL_KEYWORD },
                { "RECOMPILE", COL_KEYWORD },
                { "RECONFIGURE", COL_KEYWORD },
                { "RECOVERY", COL_KEYWORD },
                { "REFERENCES", COL_KEYWORD },
                { "REMOTE", COL_KEYWORD },
                { "REMOTE_PROC_TRANSACTIONS", COL_KEYWORD },
                { "REORGANIZE", COL_KEYWORD },
                { "REPEATABLE", COL_KEYWORD },
                { "REPEATABLEREAD", COL_KEYWORD },
                { "REPLICATION", COL_KEYWORD },
                { "RESTORE", COL_KEYWORD },
                { "RESTRICT", COL_KEYWORD },
                { "RESUMABLE", COL_KEYWORD },
                { "RETURN", COL_KEYWORD },
                { "RETURNS", COL_KEYWORD },
                { "REVERT", COL_KEYWORD },
                { "REVOKE", COL_KEYWORD },
                { "ROBUST", COL_KEYWORD },
                { "ROLE", COL_KEYWORD },
                { "ROLLBACK", COL_KEYWORD },
                { "ROUND_ROBIN", COL_KEYWORD },
                { "ROUTE", COL_KEYWORD },
                { "ROWGUIDCOL", COL_KEYWORD },
                { "ROWLOCK", COL_KEYWORD },
                { "ROWS", COL_KEYWORD },
                { "ROWVERSION", COL_KEYWORD },
                { "RULE", COL_KEYWORD },
                { "SAVE", COL_KEYWORD },
                { "SCHEMA", COL_KEYWORD },
                { "SCHEMABINDING", COL_KEYWORD },
                { "SCOPED", COL_KEYWORD },
                { "SECRET", COL_KEYWORD },
                { "SECURITY", COL_KEYWORD },
                { "SECURITYAUDIT", COL_KEYWORD },
                { "SELECT", COL_KEYWORD },
                { "SELF", COL_KEYWORD },
                { "SEND", COL_KEYWORD },
                { "SENSITIVITY", COL_KEYWORD },
                { "SEQUENCE", COL_KEYWORD },
                { "SERIALIZABLE", COL_KEYWORD },
                { "SERVER", COL_KEYWORD },
                { "SERVICE", COL_KEYWORD },
                { "SESSION", COL_KEYWORD },
                { "SET", COL_KEYWORD },
                { "SETUSER", COL_KEYWORD },
                { "SHOW_STATISTICS", COL_KEYWORD },
                { "SHOWPLAN_ALL", COL_KEYWORD },
                { "SHOWPLAN_TEXT", COL_KEYWORD },
                { "SHUTDOWN", COL_KEYWORD },
                { "SIGNATURE", COL_KEYWORD },
                { "SIMPLE", COL_KEYWORD },
                { "SNAPSHOT", COL_KEYWORD },
                { "SPARSE", COL_KEYWORD },
                { "STANDBY", COL_KEYWORD },
                { "STATE", COL_KEYWORD },
                { "STATISTICS", COL_KEYWORD },
                { "STATS", COL_KEYWORD },
                { "STOPLIST", COL_KEYWORD },
                { "SYMMETRIC", COL_KEYWORD },
                { "SYNONYM", COL_KEYWORD },
                { "SYSTEM", COL_KEYWORD },
                { "SYSTEM_TIME", COL_KEYWORD },
                { "SYSTEM_VERSIONING", COL_KEYWORD },
                { "TABLE", COL_KEYWORD },
                { "TABLESAMPLE", COL_KEYWORD },
                { "TABLOCK", COL_KEYWORD },
                { "TABLOCKX", COL_KEYWORD },
                { "TAPE", COL_KEYWORD },
                { "TARGET", COL_KEYWORD },
                { "TEXTSIZE", COL_KEYWORD },
                { "THEN", COL_KEYWORD },
                { "THROW", COL_KEYWORD },
                { "TIMEOUT", COL_KEYWORD },
                { "TO", COL_KEYWORD },
                { "TOP", COL_KEYWORD },
                { "TRAN", COL_KEYWORD },
                { "TRANSACTION", COL_KEYWORD },
                { "TRIGGER", COL_KEYWORD },
                { "TRUNCATE", COL_KEYWORD },
                { "TRY", COL_KEYWORD },
                { "TYPE", COL_KEYWORD },
                { "UNBOUNDED", COL_KEYWORD },
                { "UNCOMMITTED", COL_KEYWORD },
                { "UNION", COL_KEYWORD },
                { "UNIQUE", COL_KEYWORD },
                { "UPDATE", COL_KEYWORD },
                { "UPDATETEXT", COL_KEYWORD },
                { "UPDLOCK", COL_KEYWORD },
                { "USE", COL_KEYWORD },
                { "USEROPTIONS", COL_KEYWORD },
                { "USING", COL_KEYWORD },
                { "VALIDATION", COL_KEYWORD },
                { "VALUES", COL_KEYWORD },
                { "VARYING", COL_KEYWORD },
                { "VIEW", COL_KEYWORD },
                { "VIEW_METADATA", COL_KEYWORD },
                { "WAITFOR", COL_KEYWORD },
                { "WHEN", COL_KEYWORD },
                { "WHERE", COL_KEYWORD },
                { "WHILE", COL_KEYWORD },
                { "WITH", COL_KEYWORD },
                { "WITHIN GROUP", COL_KEYWORD },
                { "WORKLOAD", COL_KEYWORD },
                { "WRITETEXT", COL_KEYWORD },
                { "XACT_ABORT", COL_KEYWORD },
                { "XLOCK", COL_KEYWORD },
                { "XML", COL_KEYWORD },
                // Operators
                { "ALL", COL_OPERATOR },
                { "AND", COL_OPERATOR },
                { "ANY", COL_OPERATOR },
                { "APPLY", COL_OPERATOR },
                { "BETWEEN", COL_OPERATOR },
                { "CROSS", COL_OPERATOR },
                { "EXISTS", COL_OPERATOR },
                { "IN", COL_OPERATOR },
                { "INNER", COL_OPERATOR },
                { "IS", COL_OPERATOR },
                { "JOIN", COL_OPERATOR },
                { "LEFT", COL_OPERATOR },
                { "LIKE", COL_OPERATOR },
                { "MATCHED", COL_OPERATOR },
                { "NOT", COL_OPERATOR },
                { "NULL", COL_OPERATOR },
                { "OR", COL_OPERATOR },
                { "OUTER", COL_OPERATOR },
                { "PIVOT", COL_OPERATOR },
                { "RIGHT", COL_OPERATOR },
                { "SOME", COL_OPERATOR },
                { "SOURCE", COL_OPERATOR },
                { "UNPIVOT", COL_OPERATOR },
                // Types
                { "BIGINT", COL_TYPE },
                { "BINARY", COL_TYPE },
                { "BIT", COL_TYPE },
                { "CHAR", COL_TYPE },
                { "DATE", COL_TYPE },
                { "DATETIME", COL_TYPE },
                { "DATETIME2", COL_TYPE },
                { "DATETIMEOFFSET", COL_TYPE },
                { "DECIMAL", COL_TYPE },
                { "FLOAT", COL_TYPE },
                { "GEOGRAPHY", COL_TYPE },
                { "GEOMETRY", COL_TYPE },
                { "HIERARCHYID", COL_TYPE },
                { "IMAGE", COL_TYPE },
                { "INT", COL_TYPE },
                { "MONEY", COL_TYPE },
                { "NCHAR", COL_TYPE },
                { "NTEXT", COL_TYPE },
                { "NUMERIC", COL_TYPE },
                { "NVARCHAR", COL_TYPE },
                { "REAL", COL_TYPE },
                { "SMALLDATETIME", COL_TYPE },
                { "SMALLINT", COL_TYPE },
                { "SMALLMONEY", COL_TYPE },
                { "SQL_VARIANT", COL_TYPE },
                { "SYSNAME", COL_TYPE },
                { "TEXT", COL_TYPE },
                { "TIME", COL_TYPE },
                { "TIMESTAMP", COL_TYPE },
                { "TINYINT", COL_TYPE },
                { "UNIQUEIDENTIFIER", COL_TYPE },
                { "VARBINARY", COL_TYPE },
                { "VARCHAR", COL_TYPE },
                { "VECTOR", COL_TYPE }

            };
        }

        public void Highlight(RichTextBox rtbCode)
        {
            rtbCode.SelectionStart = 0;
            rtbCode.SelectionLength = rtbCode.Text.Length;
            rtbCode.SelectionBackColor = rtbCode.BackColor;
            rtbCode.SelectionColor = rtbCode.ForeColor;

            Regex r = new Regex(@"([\n\[\](),;'""])|(\s+)|(--)|(/\*)|(\*/)|([!=<>\+\-\*/%&\|\^])");

            String[] tokens = r.Split(rtbCode.Text);

            string openToken = "";

            int pos = 0;
            int selStart = 0;

            foreach (string currentToken in tokens)
            {
                string token = currentToken.Replace("\t", "").Replace(" ", "");

                if (token != "")
                {
                    if (openToken != "")
                    {
                        if
                            (
                                (token == "*/" && openToken == "/*") ||
                                (token == "\n" && openToken == "--") ||
                                (token == "'" && openToken == "'") ||
                                (token == "\"" && openToken == "\"") ||
                                (token == "]" && openToken == "[")
                            )
                        {
                            rtbCode.Select(selStart, pos - selStart + token.Length);
                            if (token == "]")
                            {
                                rtbCode.SelectionColor = COL_NORMAL;
                            }
                            else if (token == "'" || token == "\"")
                            {
                                rtbCode.SelectionColor = COL_STRING;
                            }
                            else
                            {
                                rtbCode.SelectionColor = COL_COMMENT;
                            }
                            openToken = "";
                        }
                    }
                    else if ((token == "/*" || token == "--" || token == "'" || token == "\"" || token == "[") && openToken == "")
                    {
                        openToken = token;
                        selStart = pos;
                    }
                    else
                    {
                        if (mKW.TryGetValue(token.ToUpper(), out Color color))
                        {
                            rtbCode.Select(pos, token.Length);
                            rtbCode.SelectionColor = color;
                        }
                    }
                }
                pos = pos + currentToken.Length;
            }
        }

    }
}